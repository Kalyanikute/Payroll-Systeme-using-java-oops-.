# Payroll System in Java

This is a simple **Payroll Management System** built using **Java OOP concepts**.  
The project demonstrates the use of **Abstraction, Inheritance, Polymorphism, and Collections (ArrayList)**.

---

##  Features
- Add new employees (Full-time or Part-time)
- Remove employees by ID
- Display employee details with calculated salary
- Demonstrates **abstract class and method overriding**

---

##  Technologies Used
- Java
- OOPs Concepts (Abstraction, Inheritance, Polymorphism)
- Collections Framework (ArrayList)

---  



### Code-----


import java.util.*;


 abstract class Employee{
    private String name;
    private int id;


    public Employee(String name,int id){
        this.name = name;
        this.id = id;

    }

    public String getName(){
        return name;
    }

    public int getID(){
        return id;
    }



    public abstract double calculateSalary();


    @Override
    public String toString(){
        return "Employee [Name=" + name + " , id= " + id + " ,salary=" + calculateSalary() + "]";
    }
  

}

class FullTimeEmployee extends Employee{
    private double monthlySalary;


    public FullTimeEmployee(String name ,int id,double monthlySalary){
        super(name, id);
        this.monthlySalary = monthlySalary;
    }

    @Override
    public double calculateSalary(){
        return monthlySalary;
    }
}

class PartTimeEmployee extends Employee{

    private int hoursWorked;

    private double hourlyRate;

    public PartTimeEmployee (String name,int id,int hoursWorked,double hourlyRate){

        super(name, id);
        this.hoursWorked= hoursWorked;
        this.hourlyRate = hourlyRate;
    }

    @Override

    public double calculateSalary(){
        return hoursWorked * hourlyRate;

    }

}

class PayrollSystem{
    private List<Employee> employeeList;

    public PayrollSystem(){
        employeeList = new ArrayList<>();
    }

    public void addEmployee(Employee employee){
        employeeList.add(employee);
    }
    public void removeEmployee(int id){
        Employee employeeToRemove = null ;

        for( Employee employee : employeeList){
            if (employee .getID() == id) {
                employeeToRemove = employee;
                break;
            }

        }
        if(employeeToRemove != null){
            employeeList.remove(employeeToRemove);



        }
    }

    public void displayEmployees(){
        for ( Employee employee : employeeList){
            System.out.println(employee);
        }
    }
}

public class Main {
    public static void main(String[] args) {
        PayrollSystem payrollSystem = new PayrollSystem();


        FullTimeEmployee emp1 = new FullTimeEmployee("kalyani kute",101,5000.0);

        PartTimeEmployee emp2 = new PartTimeEmployee("shruti kute",102,30,15.0);

        payrollSystem. addEmployee (emp1);
        payrollSystem .addEmployee(emp2);


        System.out.println(("Initial Employee Details"));
        payrollSystem .displayEmployees();

        System.out.println("\nRemovinfg Employee..");
        payrollSystem.removeEmployee(101);



        System.out.println("\n Remainiang Employee details---");
        payrollSystem.displayEmployees();        
    }
    
}

